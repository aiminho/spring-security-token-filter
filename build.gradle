def samplesProjectName = 'samples'
def ossrhUser = hasProperty('ossrhUsername') ? ossrhUsername : ''
def ossrhPass = hasProperty('ossrhPassword') ? ossrhPassword : ''

buildscript {
  repositories {
    mavenCentral()
  }
  dependencies {
    classpath 'io.spring.gradle:dependency-management-plugin:0.5.4.RELEASE'
    classpath 'org.springframework.boot:spring-boot-gradle-plugin:1.2.5.RELEASE'
  }
}

subprojects {
  if (it.parent != null && it.name != samplesProjectName) {
    apply plugin: 'java'
    apply plugin: 'eclipse'

    repositories {
      mavenCentral()
      mavenLocal()
    }

    if (it.parent.name == samplesProjectName) {
      apply plugin: 'spring-boot'

    } else {
      apply plugin: 'jacoco'
      apply plugin: 'maven'
      apply plugin: 'signing'
      apply plugin: 'io.spring.dependency-management'

      afterEvaluate { Project project ->
        signing {
          sign configurations.archives
        }

        task javadocJar(type: Jar) {
          classifier = 'javadoc'
          from javadoc
        }

        task sourcesJar(type: Jar) {
          classifier = 'sources'
          from sourceSets.main.allSource
        }

        artifacts {
          archives javadocJar, sourcesJar
        }

        dependencyManagement {
          imports {
            mavenBom 'io.spring.platform:platform-bom:2.0.1.RELEASE'
          }
        }

        uploadArchives {
          repositories {
            mavenDeployer {
              beforeDeployment { MavenDeployment deployment -> signing.signPom(deployment) }

              repository(url: "https://oss.sonatype.org/service/local/staging/deploy/maven2/") {
                authentication(userName: ossrhUser, password: ossrhPass)
              }

              snapshotRepository(url: "https://oss.sonatype.org/content/repositories/snapshots/") {
                authentication(userName: ossrhUser, password: ossrhPass)
              }

              pom.project {
                name project.name
                packaging 'jar'
                description project.description
                url 'https://github.com/visola/spring-security-token-filter'

                scm {
                  connection 'https://github.com/visola/spring-security-token-filter.git'
                  developerConnection 'https://github.com/visola/spring-security-token-filter.git'
                  url 'https://github.com/visola/spring-security-token-filter.git'
                }

                licenses {
                  license {
                    name 'The MIT License (MIT)'
                    url 'https://opensource.org/licenses/MIT'
                  }
                }

                developers {
                  developer {
                    id 'visola'
                    name 'Vinicius Isola'
                    email 'viniciusisola@gmail.com'
                  }
                }
              }
            }
          }
        }
      }
    }
  }
}
